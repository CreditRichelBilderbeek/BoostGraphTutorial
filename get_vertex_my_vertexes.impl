#include <vector>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include "install_vertex_custom_type.h"
#include "my_vertex.h"

//TODO: generalize to return any type
template <typename graph>
std::vector<my_vertex> get_vertex_my_vertexes(const graph& g) noexcept
{
  std::vector<my_vertex> v;

  const auto my_vertexes_map = get(boost::vertex_custom_type,g);

  for (auto p = vertices(g);
    p.first != p.second;
    ++p.first) {
    v.emplace_back(get(my_vertexes_map, *p.first));
  }
  return v;
}
