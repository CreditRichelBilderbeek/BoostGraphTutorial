#include <string>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include "has_edge_with_name.h"

template <typename graph>
typename boost::graph_traits<graph>::edge_descriptor
find_first_edge_with_name(
  const std::string& name,
  const graph& g
) noexcept
{
  assert(has_edge_with_name(name, g));

  const auto edge_name_map
    = get(boost::edge_name,g);
  const auto eip
    = edges(g); //_not_ boost::edges!
  const auto j = eip.second;

  for (auto i = eip.first; i!=j; ++i) {

    const std::string s{
      get(edge_name_map, *i)
    };
    if (s == name) { return *i; }
  }
  assert(!"Should not get here");
  throw; //Will crash the program
}
