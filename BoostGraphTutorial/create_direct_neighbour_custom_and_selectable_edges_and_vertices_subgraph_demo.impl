#include "create_direct_neighbour_custom_and_selectable_edges_and_vertices_subgraph.h"
#include "create_custom_and_selectable_edges_and_vertices_k2_graph.h"
#include "get_my_custom_vertexes.h"

void create_direct_neighbour_custom_and_selectable_edges_and_vertices_subgraph_demo() noexcept
{
  const auto g = create_custom_and_selectable_edges_and_vertices_k2_graph();
  const auto vip = vertices(g);
  const auto j = vip.second;
  for (auto i=vip.first; i!=j; ++i) {
    const auto h = create_direct_neighbour_custom_and_selectable_edges_and_vertices_subgraph(
      *i,g
    );
    assert(boost::num_vertices(h) == 2);
    assert(boost::num_edges(h) == 1);
    const auto v = get_my_custom_vertexes(h);
    std::set<my_custom_vertex> vertexes(std::begin(v),std::end(v));
    const my_custom_vertex a("A","source",0.0,0.0);
    const my_custom_vertex b("B","target",3.14,3.14);
    assert(vertexes.count(a) == 1);
    assert(vertexes.count(b) == 1);
  }
}
