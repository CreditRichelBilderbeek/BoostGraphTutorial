#include <boost/graph/adjacency_list.hpp>
#include <boost/graph/graphviz.hpp>
#include <boost/graph/graph_traits.hpp>

#include "create_empty_directed_bundled_vertices_graph.h"
#include "is_regular_file.h"
#include "my_bundled_vertex.h"
#include "is_read_graphviz_correct.h"
#include "get_bundled_vertex_my_vertexes.h"

///Load a directed graph with custom
///vertices from a .dot file.
///Assumes the file exists and that the
///custom vertices can be read by Graphviz
///TODO: the code returns an empty graph,
///instead of loading from file
boost::adjacency_list<
  boost::vecS,
  boost::vecS,
  boost::directedS,
  my_bundled_vertex
>
load_directed_bundled_vertices_graph_from_dot(
  const std::string& dot_filename
)
{
  assert(is_regular_file(dot_filename));
  assert(is_read_graphviz_correct<my_bundled_vertex>());
  std::ifstream f(dot_filename.c_str());
  auto g = create_empty_directed_bundled_vertices_graph();

  //Something like this...
  boost::dynamic_properties p; //_do_ default construct
  p.property("node_id",get(&my_bundled_vertex::m_name, g));
  p.property("label",get(&my_bundled_vertex::m_name, g));
  boost::read_graphviz(f,g,p);

  return g;
}
