#include <vector>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include "install_edge_custom_type.h"
#include "my_custom_edge.h"

///Get all edge descriptors of a graph
//TODO: generalize to return any type
template <typename graph>
std::vector<my_custom_edge> get_edge_my_edges(const graph& g) noexcept
{
  std::vector<my_custom_edge> v;

  const auto my_edges_map = get(boost::edge_custom_type,g);
  const auto eip
    = edges(g) //not boost::edges
  ;
  const auto j = eip.second;

  for (auto i = eip.first; i!=j; ++i) {
    v.emplace_back(
      get( //not boost::get
        my_edges_map, *i
      )
    );
  }
  return v;
}
