#include <cassert>
#include <boost/graph/adjacency_list.hpp>
#include "create_empty_directed_bundled_vertices_graph.h"
#include "my_bundled_vertex.h"

///Create a two-state Markov chain with custom vertices
boost::adjacency_list<
  boost::vecS,
  boost::vecS,
  boost::directedS,
  my_bundled_vertex
>
create_bundled_vertices_markov_chain() noexcept
{
  auto g
    = create_empty_directed_bundled_vertices_graph();
  const auto vd_a = boost::add_vertex(g);
  const auto vd_b = boost::add_vertex(g);
  const auto aer_aa = boost::add_edge(vd_a, vd_a, g);
  assert(aer_aa.second);
  const auto aer_ab = boost::add_edge(vd_a, vd_b, g);
  assert(aer_ab.second);
  const auto aer_ba = boost::add_edge(vd_b, vd_a, g);
  assert(aer_ba.second);
  const auto aer_bb = boost::add_edge(vd_b, vd_b, g);
  assert(aer_bb.second);

  g[vd_a] = my_bundled_vertex("Sunny",
    "Yellow thing",1.0,2.0
  );
  g[vd_b] = my_bundled_vertex("Rainy",
    "Grey things",3.0,4.0
  );

  return g;
}
