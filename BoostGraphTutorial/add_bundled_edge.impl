#include <cassert>
#include <sstream>
#include <stdexcept>
#include <boost/graph/adjacency_list.hpp>
#include "my_bundled_edge.h"

template <typename graph, typename bundled_edge>
typename boost::graph_traits<graph>::edge_descriptor
add_bundled_edge(
  const typename boost::graph_traits<graph>::vertex_descriptor& vd_from,
  const typename boost::graph_traits<graph>::vertex_descriptor& vd_to,
  const bundled_edge& edge,
  graph& g
) noexcept
{
  static_assert(!std::is_const<graph>::value,"graph cannot be const");
  const auto aer = boost::add_edge(vd_from, vd_to, g);
  if (!aer.second) {
    std::stringstream msg;
    msg << __func__ << ": edge insertion failed";
    throw std::invalid_argument(msg.str());
  }
  g[aer.first] = edge;
  return aer.first;
}
