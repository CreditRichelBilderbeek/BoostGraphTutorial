#include <cassert>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include "has_custom_vertex_with_my_vertex.h"
#include "install_vertex_custom_type.h"
#include "my_custom_vertex.h"

template <typename graph>
typename boost::graph_traits<graph>::vertex_descriptor
find_first_custom_vertex_with_my_vertex(
  const my_custom_vertex& v,
  const graph& g
) noexcept
{
  assert(has_custom_vertex_with_my_custom_vertex(v, g));
  const auto my_custom_vertexes_map = get(boost::vertex_custom_type, g);
  const auto vip
    = vertices(g); //not boost::vertices
  const auto j = vip.second;

  for (auto i = vip.first; i!=j; ++i) {
    const auto w
      = get( //not boost::get
        my_custom_vertexes_map,
        *i
      );
    if (w == v) { return *i; }
  }
  assert(!"Should not get here");
  throw; //Will crash the program
}
