#include <cassert>
#include <boost/graph/adjacency_list.hpp>
#include "install_edge_custom_type.h"
#include "my_custom_edge.h"

template <typename graph>
typename boost::graph_traits<graph>::edge_descriptor
add_custom_edge(
  const my_custom_edge& v,
  graph& g
) noexcept
{
  static_assert(!std::is_const<graph>::value,"graph cannot be const");

  const auto vd_a = boost::add_vertex(g);
  const auto vd_b = boost::add_vertex(g);

  const auto aer
    = boost::add_edge(vd_a, vd_b, g);
  if (!aer.second) {
    std::stringstream msg;
    msg << __func__ << ": edge insertion failed";
    throw std::invalid_argument(msg.str());
  }
  const auto my_edge_map
    = get(boost::edge_custom_type, g);
  put(my_edge_map, aer.first, v);
  return aer.first;
}
