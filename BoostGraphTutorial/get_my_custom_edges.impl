#include <vector>
#include <boost/graph/adjacency_list.hpp>
#include "install_edge_custom_type.h"
#include "my_custom_edge.h"

template <typename graph>
std::vector<my_custom_edge> get_my_custom_edges(
  const graph& g
) noexcept
{
  using ed = typename boost::graph_traits<graph>::edge_descriptor;
  std::vector<my_custom_edge> v(boost::num_edges(g));
  const auto eip = edges(g);
  std::transform(eip.first, eip.second, std::begin(v),
    [g](const ed d)
    {
      const auto my_custom_edges_map
        = get(boost::edge_custom_type,g);
      return get(my_custom_edges_map, d);
    }
  );
  return v;
}
