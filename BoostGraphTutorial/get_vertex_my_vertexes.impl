#include <vector>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include "install_vertex_custom_type.h"
#include "my_vertex.h"

///Collect all the my_vertex objects from a graph
//TODO: generalize to return any type
template <typename graph>
std::vector<my_vertex> get_vertex_my_vertexes(const graph& g) noexcept
{
  std::vector<my_vertex> v;

  const auto my_vertexes_map
    = get( //not boost::get
      boost::vertex_custom_type,g
    );
  const auto vip
    = vertices(g); //not boost::vertices
  const auto j = vip.second;

  for (auto i = vip.first; i!=j; ++i) {
    v.emplace_back(
      get( //not boost::get
        my_vertexes_map, *i
      )
    );
  }
  return v;
}
