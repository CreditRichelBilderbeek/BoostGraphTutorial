#include <string>
#include <vector>
#include <boost/graph/adjacency_list.hpp>
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>

//TODO: generalize to return any type
template <typename graph>
std::vector<std::string> get_edge_names(const graph& g) noexcept
{
  std::vector<std::string> v;

  const auto edge_name_map = get(boost::edge_name,g);

  for (auto p = edges(g);
    p.first != p.second;
    ++p.first) {
    v.emplace_back(get(edge_name_map, *p.first));
  }
  return v;
}
